imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
        server_version: "5.7"
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            numeric_functions:
                Rand: AppBundle\DoctrineFunction\Rand

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    registration:
        form:
            type: AppBundle\Form\UserType

hwi_oauth:
    connect:
        account_connector: my_user_provider
    firewall_names: [main]
    fosub:
        username_iterations: 30
        properties:
            facebook: facebook_id
            google: google_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           193875304387366
            client_secret:       86007a1fdbddf68b400a190c5f720e23
            infos_url:     "https://graph.facebook.com/me?fields=id,name,first_name,middle_name,last_name,locale,email"
            options:
                display: popup
        google:
            type:                google
            client_id:           741333593484-ik9lkquo65358uka2n4rpfm9ksnmvgji.apps.googleusercontent.com
            client_secret:        eXGVsbGtbglfcHoGX0MUjnGp
            scope: "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"


assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

#### Easy admin bundle
easy_admin:
    site_name: 'podelis-admin'
    design:
        brand_color: '#389222'
        assets:
#   TODO:         favicon: '/assets/backend/favicon.png'
        menu:
            - label: 'Question Reports'
              children: ['Report', 'Approved', 'Deniend']
            - label: 'Questions'
              children: ['Question', 'Added', 'Deniend_Questions', 'Reported']
            - label: 'Users'
              children: ['User', 'Disabled', 'Admin']
            - label: 'Answer'
              entity: 'Answer'
    entities:

    # Question reports menu items
        Report:
            class:  AppBundle\Entity\QuestionReport
            label: 'Submitted Reports'
            list:
                title: 'Submitted question reports'
                fields: ['id', 'questionId', 'created_by', 'updated_at', 'status']
                dql_filter: 'entity.status = 1'
            new:
                fields:
                    - reason
            edit:
                fields:
                    - questionId
                    - reason
                    - created_by
                    - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Approved': 'Approved', 'Denied': 'Denied' } } }
        Approved:
            disabled_actions: ['new']
            class:  AppBundle\Entity\QuestionReport
            label: 'Approved Reports'
            list:
                title: 'Approved question reports'
                fields: ['id', 'questionId', 'created_by', 'updated_at', 'status']
                dql_filter: 'entity.status = 2'
            edit:
                title: 'Edit report'
                fields:
                    - questionId
                    - reason
                    - created_by
                    - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Approved': 'Approved', 'Denied': 'Denied' } } }
        Deniend:
            disabled_actions: ['new']
            class:  AppBundle\Entity\QuestionReport
            label: 'Deniend Reports'
            list:
                title: 'Deniend question reports'
                fields: ['id', 'questionId', 'created_by', 'updated_at', 'status']
                dql_filter: 'entity.status = 3'
            edit:
                title: 'Edit report'
                fields:
                    - questionId
                    - reason
                    - created_by
                    - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Approved': 'Approved', 'Denied': 'Denied' } } }

# Question and question suggestions menu
        Question:
            class: AppBundle\Entity\Question
            label: 'New Question requests'
            list:
                title: 'User suggested questions'
                fields: ['id', 'book', 'title', 'created_by', 'reports', 'updated_at', 'status']
                dql_filter: 'entity.status = 1'
            new:
                fields:
                    - book
                    - title
                    - content
                    - explanation
                    - answers
            edit:
                fields:
                    - book
                    - title
                    - content
                    - explanation
                    - answers
                    - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Added': 'Added', 'Denied': 'Denied' } } }
        Added:
             disabled_actions: ['new']
             class: AppBundle\Entity\Question
             label: 'Added Questions'
             list:
                 title: 'Added questions'
                 fields: ['id', 'book', 'title', 'created_by', 'reports', 'updated_at', 'status']
                 dql_filter: 'entity.status = 2'
             edit:
                 title: 'Edit question'
                 fields:
                     - book
                     - title
                     - content
                     - explanation
                     - answers
                     - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Added': 'Added', 'Denied': 'Denied' } } }

        Deniend_Questions:
            disabled_actions: ['new']
            class: AppBundle\Entity\Question
            label: 'Deniend Questions'
            list:
                title: 'Deniend questions'
                fields: ['id', 'book', 'title', 'created_by', 'reports', 'updated_at', 'status']
                dql_filter: 'entity.status = 3'
#                sort: 'reports'
            edit:
                title: 'Edit question'
                fields:
                    - book
                    - title
                    - content
                    - explanation
                    - answers
                    - { property: 'status', type: 'choice', type_options: { multiple: false, choices: { 'Submitted': 'Submitted', 'Added': 'Added', 'Denied': 'Denied' } } }
        Reported:
            disabled_actions: ['new']
            class: AppBundle\Entity\Question
            label: 'Reported questions'
            list:
                title: 'Reported Questions'
                fields: ['id', 'book', 'title', 'created_by', 'reports', 'updated_at', 'status']
#      TODO: filter by reports          dql_filter: ''
            edit:
                title: 'Edit question'
                fields:
                    - book
                    - title
                    - content
                    - explanation
                    - answers
                    - status
# User menu
        User:
            class: AppBundle\Entity\User
            label: 'Active Users'
            disabled_actions: ['delete']
            list:
                title: 'Active users'
                fields:
                    - 'id'
                    - { property: 'avatar', type: 'image' }
                    - 'username'
                    - 'email'
                    - 'enabled'
                    - 'roles'
                dql_filter: "entity.roles NOT LIKE '%%ROLE_ADMIN%%' AND entity.enabled = true"
            edit:
                fields:
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, expanded: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - enabled
        Admin:
            class: AppBundle\Entity\User
            label: 'Administrators'
            disabled_actions: ['delete']
            list:
                title: 'Administrators'
                fields:
                    - 'id'
                    - { property: 'avatar', type: 'image' }
                    - 'username'
                    - 'email'
                    - 'enabled'
                dql_filter: "entity.roles LIKE '%%ROLE_ADMIN%%' AND entity.enabled = true"
            edit:
                fields:
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, expanded: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - enabled
        Disabled:
            disabled_actions: ['new', 'delete']
            class: AppBundle\Entity\User
            label: 'Disabled Users'
            list:
                title: 'Disabled users'
                fields:
                    - 'id'
                    - { property: 'avatar', type: 'image' }
                    - 'username'
                    - 'email'
                    - 'enabled'
                    - 'roles'
                dql_filter: 'entity.enabled = false'
            edit:
                title: 'Edit user'
                fields:
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, expanded: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - enabled
# answer section
        Answer:
            class: AppBundle\Entity\Answer
            label: 'Answers'
            list:
                title: 'Answers'
                fields:
                    - 'id'
                    - 'question'
                    - 'correct'
                    - 'updated at'
            edit:
                fields:
#                    - { property: 'roles', type: 'choice', type_options: { multiple: true, expanded: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
                    - correct
                    - question
                    - content